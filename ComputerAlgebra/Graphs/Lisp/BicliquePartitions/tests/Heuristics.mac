/* Oliver Kullmann, 20.5.2009 (Swansea) */
/* Copyright 2009 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Graphs/Lisp/BicliquePartitions/tests/Heuristics.mac
  \brief Tests for heuristical approaches for finding biclique partitions

Use by

oklib_load("OKlib/ComputerAlgebra/Graphs/Lisp/BicliquePartitions/tests/Heuristics.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/TestSystem/Lisp/Asserts.mac")$

kill(f)$


/* *********************
   * Greedy approaches *
   *********************
*/

okltest_greedy_bcp_gl(f) := block(
  assert(setify(f([{1,2},{{1,2}}])) = {[{1},{2}]}),
  assert(setify(f([{1,2,3,4},{{1,3},{2,4}}]))={[{1},{3}],[{2},{4}]}),
  assert(setify(f([{1,2,3,4},{{1,3},{2,4},{1,4},{2,3}}]))={[{1,2},{3,4}]}),
  assert(setify(f([{1,2,3,4,5,6},{{1,3},{2,4},{1,4},{2,3},{5,6},{1,6},{4,5}}]))={[{1,2},{3,4}],[{1,5},{6}],[{4},{5}]}),
  assert(setify(f([{1,2,3,4,5,6,7},{{1,3},{2,4},{1,4},{2,3},{5,6},{1,6},{4,5},{2,7}}]))={[{1,2},{3,4}],[{1,5},{6}],[{2},{7}],[{4},{5}]}),
  true) $

okltest_greedy_bcp_ogl(f) := block(
  assert(setify(f([[1,2],[{1,2}]])) = {[{1},{2}]}),
  assert(setify(f([[1,2,3,4],[{1,3},{2,4}]]))={[{1},{3}],[{2},{4}]}),
  assert(setify(f([[1,2,3,4],[{1,3},{2,4},{1,4},{2,3}]]))={[{1,2},{3,4}]}),
  assert(setify(f([[1,2,3,4,5,6],[{1,3},{2,4},{1,4},{2,3},{5,6},{1,6},{4,5}]]))={[{1,2},{3,4}],[{1,5},{6}],[{4},{5}]}),
  assert(setify(f([[1,2,3,4,5,6,7],[{1,3},{2,4},{1,4},{2,3},{5,6},{1,6},{4,5},{2,7}]]))={[{1,2},{3,4}],[{1,5},{6}],[{2},{7}],[{4},{5}]}),
  true) $

okltest_greedy_bcp_mugl(f) := block(
  assert(setify(f([{1,2},{{1,2}},lambda([e],1)])) = {[{1},{2}]}),
  assert(setify(f([{1,2,3,4},{{1,3},{2,4}},lambda([e],1)]))={[{1},{3}],[{2},{4}]}),
  assert(setify(f([{1,2,3,4},{{1,3},{2,4},{1,4},{2,3}},lambda([e],1)]))={[{1,2},{3,4}]}),
  assert(setify(f([{1,2,3,4,5,6},{{1,3},{2,4},{1,4},{2,3},{5,6},{1,6},{4,5}},lambda([e],1)]))={[{1,2},{3,4}],[{1,5},{6}],[{4},{5}]}),
  assert(setify(f([{1,2,3,4,5,6,7},{{1,3},{2,4},{1,4},{2,3},{5,6},{1,6},{4,5},{2,7}},lambda([e],1)]))={[{1,2},{3,4}],[{1,5},{6}],[{2},{7}],[{4},{5}]}),
  true) $

okltest_greedy_bcp_gg(f) := block(
  assert(setify(f([{1,2},{1},lambda([e],{1,2})])) = {[{1},{2}]}),
  assert(setify(f([{1,2,3,4},{1,2},lambda([e],if e = 1 then {1,3} else {2,4})]))={[{1},{3}],[{2},{4}]}),
  assert(setify(f([{1,2,3,4},{1,2,3,4},lambda([e],if e = 1 then {1,3} elseif e = 2 then {2,4} elseif e = 3 then {1,4} else {2,3})]))={[{1,2},{3,4}]}),
  assert(setify(f([{1,2,3,4,5,6},{1,2,3,4,5,6,7},lambda([e],if e = 1 then {1,3} elseif e = 2 then {2,4} elseif e = 3 then {1,4} elseif e = 4 then {2,3} elseif e = 5 then {5,6} elseif e = 6 then {1,6} else {4,5})]))={[{1,2},{3,4}],[{1,5},{6}],[{4},{5}]}),
  assert(setify(f([{1,2,3,4,5,6,7},{1,2,3,4,5,6,7,8},lambda([e],if e = 1 then {1,3} elseif e = 2 then {2,4} elseif e = 3 then {1,4} elseif e = 4 then {2,3} elseif e = 5 then {5,6} elseif e = 6 then {1,6} elseif e = 7 then {4,5} else {2,7})]))={[{1,2},{3,4}],[{1,5},{6}],[{4},{5}],[{2},{7}]}),
  true) $

/*!
\endhtmlonly
*/
